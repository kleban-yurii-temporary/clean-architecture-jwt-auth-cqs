@page "/teacher"

@using EduTrack.WebUI.Shared.Courses;
@using EduTrack.WebUI.Shared.Dtos.Courses;
@using Syncfusion.Blazor.Grids;
@using EduTrack.WebUI.Client.Shared.PlainAdmin;

@layout PlainAdminLayout;

@inject NavigationManager Navigation;
@inject HttpTeacherCoursesService CoursesService;
@inject HttpTeacherOtherCoursesService OtherCoursesService;

@attribute [Authorize(Roles = "teacher")]

<PlainAdminPageTitle Title="Список робіт">
    <Buttons>
        <SfButton IconCss="fa-solid fa-plus" OnClick="@CreateCourseShowModal" CssClass="e-primary e-outline">Додати курс/роботи</SfButton>
    </Buttons>
    <Breadcrumbs>
        <SfBreadcrumb>
            <BreadcrumbItems>
                <BreadcrumbItem IconCss="e-icons e-home" Url="/" />               
                <BreadcrumbItem Text="Список курсів" />
            </BreadcrumbItems>
        </SfBreadcrumb>
    </Breadcrumbs>
</PlainAdminPageTitle>

<PlainAdminCard>
    <CardBody>
        <h6 class="mb-20">Навчальні курси</h6>

        @if (Courses == null)
        {
            <EduTrackSpinner></EduTrackSpinner>
        }
        else if (!Courses.Any())
        {
            <SfMessage Severity="MessageSeverity.Info">Курси відсутні.</SfMessage>
        }
        else
        {
            <SfGrid DataSource="@Courses">
                <GridPageSettings PageSize="5"></GridPageSettings>
                <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(CourseReadDto.Id) Visible="false" IsPrimaryKey="true"></GridColumn>
                    <GridColumn HeaderText="Загальна інформація">
                        <Template>
                            @{
                                var c = (context as CourseReadDto);
                                <h6>@c.Title</h6>
                                <p><small>Навч. рік: <span class="text-primary">@c.EduYear</span>, семестр: <span class="text-primary">@c.Semestr</span></small></p>
                                <p>
                                    <small>
                                        Група/и: <span class="text-primary">@c.GroupCode</span>;
                                        @if (c.GroupsCount > 1)
                                        {
                                            <span>(підгруп: @c.GroupsCount)</span>
                                            ;
                                        }
                                        студ.: <span class="text-primary">@c.StudentsCountActualy/@c.StudentsCount</span>
                                    </small>
                                </p>
                                <p>
                                    @if (c.IsActive)
                                    {
                                        <span style="font-size:12px; font-weight:normal" class="badge bg-success"><i class="fa-solid fa-check"></i> Активний</span>
                                    }
                                    else
                                    {
                                        <span style="font-size:12px; font-weight:normal" class="badge bg-danger"><i class="fa-solid fa-xmark"></i> Неактивний</span>
                                    }
                                </p>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn>
                        <Template>
                            @{
                                var c = (context as CourseReadDto);
                                <p>
                                    <small>
                                        @if (c.LecturesHours > 0)
                                        {
                                            <span>
                                                Лекції: (<span class="text-primary">@c.LecturesHours</span>) год.,
                                                <span class="text-primary">@(c.LecturesHours / 2)/@c.LecturesActualy</span>
                                            </span>
                                            <br />
                                        }
                                        @if (c.LaboratoryHours > 0)
                                        {
                                            <span>
                                                Лабораторні: (<span class="text-primary">@c.LaboratoryHours</span>) год.,
                                                <span class="text-primary">@(c.LaboratoryHours / 2)/@c.LaboratoryActualy</span>
                                            </span>
                                            <br />
                                        }
                                        @if (c.PracticeHours > 0)
                                        {
                                            <span>
                                                Практичні: (<span class="text-primary">@c.PracticeHours</span>) год.,
                                                <span class="text-primary">@(c.PracticeHours / 2)/@c.PracticeActualy</span>
                                            </span>
                                            <br />
                                        }
                                    </small>
                                </p>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Деталі" TextAlign="TextAlign.Center" Width="150">
                        <Template>
                            @{
                                var c = (context as CourseReadDto);
                                <SfButton OnClick="@(e => ViewCourseDetails(c.Id))" IsPrimary="true" IconCss="fa-regular fa-file-lines"></SfButton>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        }
        <hr />
        <h6 class="mb-20">Інші види робіт</h6>
        @if (OtherCourses == null)
        {
            <EduTrackSpinner></EduTrackSpinner>
        }
        else if (!OtherCourses.Any())
        {
            <SfMessage Severity="MessageSeverity.Info">Інші види навчальних робіт відсутні.</SfMessage>
        }
        else
        {
            <SfGrid DataSource="@OtherCourses">
                <GridPageSettings PageSize="5"></GridPageSettings>
                <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OtherCourseReadDto.Id) Visible="false" IsPrimaryKey="true"></GridColumn>
                    <GridColumn HeaderText="Загальна інформація">
                        <Template>
                            @{
                                var c = (context as OtherCourseReadDto);
                                <h6>@c.Title</h6>
                                <p><small>Навч. рік: <span class="text-primary">@c.EduYear</span>, семестр: <span class="text-primary">@c.Semestr</span></small></p>
                                @if (!string.IsNullOrEmpty(c.GroupCode))
                                {
                                    <p>
                                        <small>
                                            Група/и: <span class="text-primary">@c.GroupCode</span>,
                                            студ.: <span class="text-primary">@c.StudentsCount</span>
                                        </small>
                                    </p>
                                }

                                <p>
                                    @if (c.IsActive)
                                    {
                                        <span style="font-size:12px; font-weight:normal" class="badge bg-success"><i class="fa-solid fa-check"></i> Активний</span>
                                    }
                                    else
                                    {
                                        <span style="font-size:12px; font-weight:normal" class="badge bg-danger"><i class="fa-solid fa-xmark"></i> Неактивний</span>
                                    }
                                </p>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn>
                        <Template>
                            @{
                                var c = (context as OtherCourseReadDto);
                                <p>
                                    <small>
                                        @if (c.Hours > 0)
                                        {
                                            <span>
                                                Навантаження: (<span class="text-primary">@c.Hours/@c.HoursActualy</span>) год.
                                            </span>

                                            <br />
                                            <span>
                                                Норма: @*(<span class="text-primary">@c.Hours/@c.HoursActualy</span>) год.*@ год./студ.
                                            </span>
                                        }
                                    </small>
                                </p>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Деталі" TextAlign="TextAlign.Center" Width="150">
                        <Template>
                            @{
                                var c = (context as OtherCourseReadDto);
                                <SfButton OnClick="@(e => ViewOtherCourseDetails(c.Id))" IsPrimary="true" IconCss="fa-regular fa-file-lines"></SfButton>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        }

    </CardBody>
</PlainAdminCard>



<SfDialog Width="35%" IsModal="true" @bind-Visible="@NewCourseModalVisibility">
    <DialogTemplates>
        <Header> Створення нового курсу / виду робіт </Header>
        <Content>
            <p>Оберіть, що саме Ви бажаєте додати:</p>
            <br />
            <p><SfRadioButton Label="Курс" Name="options" Value="course" @bind-Checked="courseTypeChecked"></SfRadioButton></p>
            <p><SfRadioButton Label="Інші види робіт (курсові, консультації, ЕК тощо)" Name="options" Value="othercourse" @bind-Checked="courseTypeChecked"></SfRadioButton></p>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Відмінити" IsPrimary="false" OnClick="@CloseModal" />
        <DialogButton Content="Продовжити" IsPrimary="true" OnClick="@CreateCourseAsync" />
    </DialogButtons>
    <DialogAnimationSettings Effect="@DialogEffect.None"></DialogAnimationSettings>
</SfDialog>

@code {


    bool NewCourseModalVisibility = false;

    void CreateCourseShowModal()
    {
        NewCourseModalVisibility = true;
    }

    private IEnumerable<CourseReadDto> Courses = null;

    private IEnumerable<OtherCourseReadDto> OtherCourses = null;

    protected override async Task OnInitializedAsync()
    {
        Courses = await CoursesService.GetListAsync();

        OtherCourses = await OtherCoursesService.GetListAsync();
    }
    void ViewCourseDetails(Guid id)
    {
        Navigation.NavigateTo($"/course/{id}/lessons");
    }

    void ViewOtherCourseDetails(Guid id)
    {
        Navigation.NavigateTo($"teacher/othercourse/{id}");
    }
   
    string courseTypeChecked = "course";

    async Task CreateCourseAsync()
    {
        var newCourseIdObj = await CoursesService
        .CreateCourseAsync(courseTypeChecked == "course"
            ? CourseCreateTypeEnum.Course
            : CourseCreateTypeEnum.OtherCourse);

        Navigation.NavigateTo($"/course/{newCourseIdObj}/settings");
    }

    void CloseModal()
    {
        NewCourseModalVisibility = false;
    }
}
