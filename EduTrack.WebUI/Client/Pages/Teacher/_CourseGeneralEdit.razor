@using EduTrack.WebUI.Shared.Courses;
@inject HttpTeacherCoursesService CourseService

<div style="padding:15px 10px">
    @if (Course is null)
    {
        <EduTrackSpinner></EduTrackSpinner>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <label class="pa-label text-muted">- Назва -</label>

                <SfInPlaceEditor CssClass="w100" @bind-Value="@Course.Title" TValue="string" Mode="RenderMode.Inline" EditableOn="EditableType.Click" Type="Syncfusion.Blazor.InPlaceEditor.InputType.Text" ShowButtons="true" SubmitOnEnter="true">
                    <EditorComponent>
                        <EditForm Model="@Course">
                            <DataAnnotationsValidator />
                            <SfTextBox ValueChange="@ChangeNameField" @bind-Value="@Course.Title" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                            <ValidationMessage For=@(() => Course.Title) />
                        </EditForm>
                    </EditorComponent>
                </SfInPlaceEditor>

            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <label class="pa-label text-muted">- Навч. рік -</label>
                <SfInPlaceEditor CssClass="w100" @bind-Value="@Course.EduYear" TValue="string" Mode="RenderMode.Inline" EditableOn="EditableType.Click" Type="Syncfusion.Blazor.InPlaceEditor.InputType.Text" ShowButtons="true" SubmitOnEnter="true">
                    <EditorComponent>
                        <SfTextBox @bind-Value="@Course.EduYear" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    </EditorComponent>
                </SfInPlaceEditor>
            </div>
            <div class="col-md-6">
                <label class="pa-label text-muted">- Семестр -</label>
                <SfInPlaceEditor CssClass="w100" @bind-Value="@Course.Semestr" TValue="int" Mode="RenderMode.Inline" EditableOn="EditableType.Click" Type="Syncfusion.Blazor.InPlaceEditor.InputType.Numeric" ShowButtons="true" SubmitOnEnter="true">
                    <EditorComponent>
                        <SfNumericTextBox Min="1" Max="2" @bind-Value="@Course.Semestr" FloatLabelType="@FloatLabelType.Auto"></SfNumericTextBox>
                    </EditorComponent>
                </SfInPlaceEditor>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <label class="pa-label text-muted">- Група/и -</label>
                <SfInPlaceEditor CssClass="w100" @bind-Value="@Course.GroupCode" TValue="string" Mode="RenderMode.Inline" EditableOn="EditableType.Click" Type="Syncfusion.Blazor.InPlaceEditor.InputType.Text" ShowButtons="true" SubmitOnEnter="true">
                    <EditorComponent>
                        <SfTextBox @bind-Value="@Course.GroupCode" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    </EditorComponent>
                </SfInPlaceEditor>
            </div>
        </div>
    }
</div>

<style>
    .w100 {
        width: 100% !important;
    }

    label.pa-label {
        margin-left: 0 0 0 10px !important;
        display: block;
        margin: 0 0 0 0 !important;
    }

    .e-inplaceeditor .e-editable-value-container .e-editable-overlay-icon {
        visibility: visible;
    }
</style>
@code {
    [Parameter]
    public Guid Id { get; set; }

    CourseReadDto? Course;

    async Task ValueChangeHandler(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
       Console.WriteLine(args.Value);
    }

    protected void ChangeNameField(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
       // Changes++;
    }

    protected override async Task OnParametersSetAsync()
    {
        var result = await CourseService.GetDetailedAsync(Id);

        if (result.IsError)
        {
            throw new NotImplementedException("Alert. No course!");
        }
        else
        {
            Course = result.Value;
        }
    }
}
