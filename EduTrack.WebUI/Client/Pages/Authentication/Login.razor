@page "/login"

@layout CleanLayout

@using EduTrack.WebUI.Client.HttpServices.Authentification;
@using EduTrack.WebUI.Shared.Authentication;
@using System.Text.Json;

@inject HttpAuthenticationService AuthenticationService
@inject AuthenticationStateProvider AuthentificationStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject TokenManagerService TokenManagerService

<h4 class="text-center"><span class="text-danger">Edu</span> Track App <small style="font-size:12px" class="text-muted">v0.1</small></h4>
<SfCard>
    <CardContent>
        <h5 class="text-center" style="margin: 7px 35px 0">Вхід у систему</h5>
        <hr />
        <EditForm Model="@model" OnValidSubmit="@LoginAsync">
            <DataAnnotationsValidator />
            @* <ValidationSummary /> *@

            <div style="padding: 5px 10px 5px">
                <div class="row">
                    <div class="col-md-12">
                        <SfTextBox @bind-Value="model.Email" Type="Syncfusion.Blazor.Inputs.InputType.Email" Placeholder="Email" FloatLabelType="@FloatLabelType.Auto" ></SfTextBox>
                        <ValidationMessage For="@(() => model.Email)" class="badge bg-danger" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <SfTextBox @bind-Value="model.Password" Type="Syncfusion.Blazor.Inputs.InputType.Password" Placeholder="Пароль" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                        <ValidationMessage For="@(() => model.Password)" class="badge bg-danger" />
                    </div>
                </div>
                <div class="row" style="margin-top:10px">
                    <div class="col-md-12 text-center">
                        <SfButton CssClass="e-success" type="submit" >Увійти</SfButton>
                    </div>
                </div>

                <div class="text-center text-danger" style="margin: 7px 10px; font-size: 12px">@ServerError</div>
            </div>

        </EditForm>
    </CardContent>
</SfCard>
<div class="text-center text-muted" style="margin-top: 10px; font-size: 12px;">&copy; @DateTime.Now.Year Юрій Клебан</div>


@code {

    private UserLoginDto model = new();

    string ServerError = " ";

    protected override void OnParametersSet()
    {
        model.Email = "demo@email.com";
        model.Password = "demoPA$$W0RD";
    }

    private async Task LoginAsync()
    {
        var response = await AuthenticationService.LoginAsync(model);

        if (response.IsError)
        {
            ServerError = response.Title;
        }
        else
        {
            await TokenManagerService.SetTokenAsync(response.Value.Token);
            await LocalStorage.SetItemAsync<string>("refreshToken", response.Value.RefreshToken);
            await AuthentificationStateProvider.GetAuthenticationStateAsync();
            Navigation.NavigateTo("/");
        }
    }

}
